<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<ModulePrefs title="Google.com" />
<Content type="html"><![CDATA[

<!DOCTYPE html>
<html lang="en-us">
<head>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>google.com</title>
    <link rel="shortcut icon" href="https://cdn.jsdelivr.net/gh/schoolflashx/bilbilu@main/TemplateData/img/favicon.ico">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/schoolflashx/bilbilu@main/TemplateData/css/style.css">
</head>
<body>
    <div class="keepRatio">
        <div id="gameContainer" class="unity-desktop webgl-content">
            <canvas id="gameCanvas"></canvas>
            <div id="loadingBlock">
                <img class="logo" src="https://cdn.jsdelivr.net/gh/schoolflashx/bilbilu@main/TemplateData/img/Logo.png"></img>
                <span class="subtitle"><br></span>
                <div id="progressBar">
                    <div>LOADING ... (Classroom Center Site!)</div>
                    <div class="centered">
                        <div id="emptyBar"></div>
                        <div id="fullBar"></div>
                    </div>
                </div>
                <div id="warningBrowserBlock" style="display:none;">
                    <div class="warningBrowserText"></div>
                    <div class="browserIcons"></div>
                </div>
                <div id="warningMobileBlock" style="display:none;">
                    <div class="warningBrowserText">
                        Please note that Unity WebGL is not currently supported on mobiles.
                    </div>
                </div>
            </div>
            <div id="errorBrowserBlock" style="display:none;">
                <img class="logo" src="TemplateData/img/Logo.png"></img>
                <span class="subtitle"><br></span>
                <div id="errorContent" style="display:none;">
                    <div class="errorBrowserText"></div>
                    <div class="browserIcons"></div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function ToggleFullScreen() {
            var isInFullScreen = (document.fullscreenElement && document.fullscreenElement !== null) ||
            (document.webkitFullscreenElement && document.webkitFullscreenElement !== null) ||
            (document.msFullscreenElement && document.msFullscreenElement !== null);
            
            var element = document.body.getElementsByClassName("webgl-content")[0];
            
            if (!isInFullScreen) {
                if (element.webkitRequestFullscreen) {
                    element.webkitRequestFullscreen();
                } else if (element.msRequestFullscreen) { 
                    element.msRequestFullscreen();
                } else if (element.requestFullscreen) {
                    element.requestFullscreen();
                } 
            }
            else {
                if (document.exitFullscreen) {
                    document.exitFullscreen();
                } else if (document.webkitExitFullscreen) { 
                    document.webkitExitFullscreen();
                } else if (document.msExitFullscreen) { 
                    document.msExitFullscreen();
                }
            }
        }
        
        function CheckCompatibility() {
            if (!hasWebGL()){
                document.getElementById("errorBrowserBlock").style.display = "inherit";
            }
            else if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
                document.getElementById("warningMobileBlock").style.display = "inherit";
            }
            else if (!isFirefox && !isSafari && !isChrome) {
                document.getElementById("warningBrowserBlock").style.display = "inherit";
            }
        }
        
        function hasWebGL() {
            var supported;
            try {
                var canvas = document.createElement('canvas');
                supported = !! window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'));
            } catch(e) { supported = false; }

            try {
                eval('let foo = 123;');
            } catch (e) { supported = false; }
            canvas = undefined;
            return supported;
        }

        var isFirefox = typeof InstallTrigger !== 'undefined';
        var isSafari = /constructor/i.test(window.HTMLElement) || 
            (function (p) { return p.toString() === "[object SafariRemoteNotification]"; })
            (!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));
        var isChromium = window.chrome;
        var winNav = window.navigator;
        var vendorName = winNav.vendor;
        var isOpera = typeof window.opr !== "undefined";
        var isIEedge = winNav.userAgent.indexOf("Edge") > -1;
        var isIOSChrome = winNav.userAgent.match("CriOS");
        var isChrome = isIOSChrome || 
            (isChromium !== null && typeof isChromium !== "undefined" && vendorName === "Google Inc." && isOpera === false && isIEedge === false);
        
        var buildUrl = "https://cdn.jsdelivr.net/gh/schoolflashx/bilbilu@main/Build";
        var loaderUrl = buildUrl + "/fb9502bc7610d9c812fd76745164ef27.js";
        var config = {
            dataUrl: "", // boş bırakıyoruz, birazdan biz ayarlayacağız
            frameworkUrl: buildUrl + "/59f116a01ba156009be1331a920ead96.js.unityweb",
            codeUrl: buildUrl + "/c04f87f256d6238c834e76a761d263d1.wasm.unityweb",
            streamingAssetsUrl: "StreamingAssets",
            companyName: "Gamebol",
            productName: "Ultimate Car Driving",
            productVersion: "1.0",
        };

        var container = document.querySelector("#gameContainer");
        var canvas = document.querySelector("#gameCanvas");
        var loadingBar = document.querySelector("#loadingBlock");
        var progressBarFull = document.querySelector("#fullBar");
        var progressBarEmpty = document.querySelector("#emptyBar");

        if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {
            container.className = "unity-mobile";
            config.devicePixelRatio = 1;
        }
        CheckCompatibility();

        async function loadDataFile() {
            const parts = [
                buildUrl + "/0aff4ee936778b905d874c8c2fb40213.data.unityweb.part1",
                buildUrl + "/0aff4ee936778b905d874c8c2fb40213.data.unityweb.part2",
                buildUrl + "/0aff4ee936778b905d874c8c2fb40213.data.unityweb.part3",
                buildUrl + "/0aff4ee936778b905d874c8c2fb40213.data.unityweb.part4",
                buildUrl + "/0aff4ee936778b905d874c8c2fb40213.data.unityweb.part5"
            ];

            let buffers = [];
            for (let url of parts) {
                const resp = await fetch(url);
                const buf = await resp.arrayBuffer();
                buffers.push(buf);
            }

            let totalLength = buffers.reduce((a, b) => a + b.byteLength, 0);
            let tmp = new Uint8Array(totalLength);
            let offset = 0;
            for (let b of buffers) {
                tmp.set(new Uint8Array(b), offset);
                offset += b.byteLength;
            }

            let blob = new Blob([tmp]);
            config.dataUrl = URL.createObjectURL(blob);
        }

        async function loadGame() {
            await loadDataFile();

            var script = document.createElement("script");
            script.src = loaderUrl;
            script.onload = () => {
                createUnityInstance(canvas, config, (progress) => {
                    progressBarFull.style.width = 100 * progress + "%";       
                    progressBarEmpty.style.width = (100 * (1 - progress)) + "%";
                }).then((unityInstance) => {
                    loadingBar.style.display = "none";
                }).catch((message) => {
                    alert(message);
                });
            };
            document.body.appendChild(script);
        }

        loadGame();
    </script>
</body>
</html>



]]></Content>
</Module>